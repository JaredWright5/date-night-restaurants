---
import BaseLayout from '@/layouts/BaseLayout.astro';
import { getRestaurantBySlug, getRestaurantsByNeighborhood, getAllRestaurants } from '@/lib/supabase';

export async function getStaticPaths() {
  try {
    const restaurants = await getAllRestaurants();
    
    return restaurants.map(restaurant => ({
      params: { 
        neighborhood: restaurant.neighborhood_slug,
        restaurant: restaurant.slug 
      }
    }));
  } catch (error) {
    console.error('Error generating static paths:', error);
    return [];
  }
}

const { neighborhood, restaurant } = Astro.params;

// Get restaurant data from Supabase
let restaurantData;
try {
  restaurantData = await getRestaurantBySlug(neighborhood, restaurant);
} catch (error) {
  console.error('Error fetching restaurant:', error);
  return new Response('Database connection failed. Please check your Supabase configuration.', { status: 500 });
}

if (!restaurantData) {
  return Astro.redirect('/restaurants/', 404);
}

// Get related restaurants in the same neighborhood
const relatedRestaurants = await getRestaurantsByNeighborhood(neighborhood);
const otherRestaurants = relatedRestaurants
  .filter(r => r.slug !== restaurant)
  .slice(0, 6);

// Generate dynamic content
const pageTitle = `${restaurantData.name} | ${restaurantData.neighborhood} Date Night Restaurant`;
const pageDescription = `${restaurantData.name} in ${restaurantData.neighborhood} - ${restaurantData.description || `A romantic ${restaurantData.cuisine_types.join(', ')} restaurant perfect for date nights.`}`;

// Set canonical URL
const canonicalUrl = `https://datenightrestaurants.com/restaurants/${neighborhood}/${restaurant}/`;

// Generate price symbols
const priceSymbols = '$'.repeat(restaurantData.price_level);

// Structured data
const structuredData = {
  "@context": "https://schema.org",
  "@type": "Restaurant",
  "name": restaurantData.name,
  "description": restaurantData.description,
  "url": canonicalUrl,
  "telephone": restaurantData.phone,
  "address": {
    "@type": "PostalAddress",
    "streetAddress": restaurantData.address,
    "addressLocality": restaurantData.neighborhood,
    "addressRegion": "CA",
    "addressCountry": "US"
  },
  "geo": {
    "@type": "GeoCoordinates",
    "latitude": 0, // You'll need to add coordinates to your data
    "longitude": 0
  },
  "aggregateRating": {
    "@type": "AggregateRating",
    "ratingValue": restaurantData.rating,
    "reviewCount": 0
  },
  "priceRange": priceSymbols,
  "servesCuisine": restaurantData.cuisine_types,
  "image": restaurantData.photos[0] || '',
  "sameAs": restaurantData.website ? [restaurantData.website] : []
};
---

<BaseLayout
  title={pageTitle}
  description={pageDescription}
  canonical={canonicalUrl}
  keywords={[restaurantData.name, `${restaurantData.neighborhood} restaurants`, 'date night restaurant', 'romantic dining', ...restaurantData.cuisine_types]}
  structuredData={structuredData}
>
  <div class="restaurant-detail-page">
    <div class="container">
      <!-- Breadcrumb -->
      <nav class="breadcrumb">
        <a href="/">Home</a>
        <span class="separator">‚Ä∫</span>
        <a href="/restaurants/">Restaurants</a>
        <span class="separator">‚Ä∫</span>
        <a href={`/restaurants/${neighborhood}/`}>{restaurantData.neighborhood}</a>
        <span class="separator">‚Ä∫</span>
        <span>{restaurantData.name}</span>
      </nav>

      <!-- Restaurant Header -->
      <header class="restaurant-header">
        <div class="restaurant-info">
          <h1>{restaurantData.name}</h1>
          <div class="restaurant-meta">
            <div class="rating">
              <span class="stars">‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ</span>
              <span class="rating-value">{restaurantData.rating}</span>
            </div>
            <div class="price-level">{priceSymbols}</div>
            <div class="date-score">
              <span class="heart">‚ù§Ô∏è</span>
              <span>Date Score: <strong>{restaurantData.date_night_score}</strong></span>
            </div>
          </div>
          <div class="cuisine-types">
            {restaurantData.cuisine_types.map(cuisine => (
              <span class="cuisine-tag">{cuisine}</span>
            ))}
          </div>
        </div>
        
        <div class="restaurant-image">
          <img 
            src={restaurantData.photos[0] || 'https://images.unsplash.com/photo-1414235077428-338989a2e8c0?w=800&h=600&fit=crop&ixlib=rb-4.0.3'} 
            alt={`${restaurantData.name} restaurant in ${restaurantData.neighborhood}`}
            loading="eager"
          />
        </div>
      </header>

      <!-- Restaurant Details -->
      <section class="restaurant-details">
        <div class="details-grid">
          <div class="detail-card">
            <h3>üìç Location</h3>
            <p>{restaurantData.address}</p>
            <p>{restaurantData.neighborhood}, {restaurantData.city}</p>
          </div>
          
          {restaurantData.phone && (
            <div class="detail-card">
              <h3>üìû Phone</h3>
              <p><a href={`tel:${restaurantData.phone}`}>{restaurantData.phone}</a></p>
            </div>
          )}
          
          {restaurantData.website && (
            <div class="detail-card">
              <h3>üåê Website</h3>
              <p><a href={restaurantData.website} target="_blank" rel="noopener noreferrer">Visit Website</a></p>
            </div>
          )}
          
          <div class="detail-card">
            <h3>üí∞ Price Level</h3>
            <p>{priceSymbols} ({restaurantData.price_level === 1 ? 'Budget' : restaurantData.price_level === 2 ? 'Moderate' : restaurantData.price_level === 3 ? 'Expensive' : 'Very Expensive'})</p>
          </div>
        </div>
      </section>

      <!-- Description -->
      {restaurantData.description && (
        <section class="restaurant-description">
          <h2>About {restaurantData.name}</h2>
          <p>{restaurantData.description}</p>
        </section>
      )}

      <!-- Photo Gallery -->
      {restaurantData.photos.length > 1 && (
        <section class="photo-gallery">
          <h2>Photos</h2>
          <div class="gallery-grid">
            {restaurantData.photos.slice(1, 5).map((photo, index) => (
              <div class="gallery-item">
                <img 
                  src={photo} 
                  alt={`${restaurantData.name} photo ${index + 2}`}
                  loading="lazy"
                />
              </div>
            ))}
          </div>
        </section>
      )}

      <!-- Related Restaurants -->
      {otherRestaurants.length > 0 && (
        <section class="related-restaurants">
          <h2>More Restaurants in {restaurantData.neighborhood}</h2>
          <div class="related-grid">
            {otherRestaurants.map(relatedRestaurant => (
              <div class="related-card">
                <img 
                  src={relatedRestaurant.photos[0] || 'https://images.unsplash.com/photo-1414235077428-338989a2e8c0?w=300&h=200&fit=crop&ixlib=rb-4.0.3'} 
                  alt={relatedRestaurant.name}
                  loading="lazy"
                />
                <div class="related-info">
                  <h3>{relatedRestaurant.name}</h3>
                  <p>{relatedRestaurant.cuisine_types.join(', ')}</p>
                  <div class="related-meta">
                    <span class="rating">‚òÖ {relatedRestaurant.rating}</span>
                    <span class="date-score">‚ù§Ô∏è {relatedRestaurant.date_night_score}</span>
                  </div>
                  <a href={`/restaurants/${neighborhood}/${relatedRestaurant.slug}/`} class="btn btn-primary">
                    View Details
                  </a>
                </div>
              </div>
            ))}
          </div>
        </section>
      )}

      <!-- Back to Neighborhood -->
      <section class="back-section">
        <div class="container">
          <a href={`/restaurants/${neighborhood}/`} class="btn btn-secondary">
            ‚Üê Back to {restaurantData.neighborhood} Restaurants
          </a>
        </div>
      </section>
    </div>
  </div>
</BaseLayout>

<style>
  .restaurant-detail-page {
    padding: 2rem 0;
    background-color: #f8f9fa;
    min-height: 100vh;
  }

  .breadcrumb {
    margin-bottom: 2rem;
    font-size: 0.9rem;
    color: #6c757d;
  }

  .breadcrumb a {
    color: #e74c3c;
    text-decoration: none;
  }

  .breadcrumb a:hover {
    text-decoration: underline;
  }

  .separator {
    margin: 0 0.5rem;
  }

  .restaurant-header {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 3rem;
    margin-bottom: 3rem;
    background: white;
    padding: 2rem;
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0,0,0,0.1);
  }

  .restaurant-info h1 {
    font-size: 2.5rem;
    color: #2c3e50;
    margin-bottom: 1rem;
  }

  .restaurant-meta {
    display: flex;
    gap: 2rem;
    margin-bottom: 1rem;
    flex-wrap: wrap;
  }

  .rating {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .stars {
    color: #ffc107;
  }

  .rating-value {
    font-weight: 600;
    color: #2c3e50;
  }

  .price-level {
    font-size: 1.2rem;
    color: #28a745;
    font-weight: 600;
  }

  .date-score {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: #e74c3c;
    font-weight: 600;
  }

  .cuisine-types {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .cuisine-tag {
    background: #e74c3c;
    color: white;
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.9rem;
    font-weight: 500;
  }

  .restaurant-image img {
    width: 100%;
    height: 300px;
    object-fit: cover;
    border-radius: 8px;
  }

  .restaurant-details {
    margin-bottom: 3rem;
  }

  .details-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
  }

  .detail-card {
    background: white;
    padding: 1.5rem;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
  }

  .detail-card h3 {
    color: #2c3e50;
    margin-bottom: 0.5rem;
    font-size: 1.1rem;
  }

  .detail-card a {
    color: #e74c3c;
    text-decoration: none;
  }

  .detail-card a:hover {
    text-decoration: underline;
  }

  .restaurant-description {
    background: white;
    padding: 2rem;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    margin-bottom: 3rem;
  }

  .restaurant-description h2 {
    color: #2c3e50;
    margin-bottom: 1rem;
  }

  .photo-gallery {
    background: white;
    padding: 2rem;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    margin-bottom: 3rem;
  }

  .photo-gallery h2 {
    color: #2c3e50;
    margin-bottom: 1rem;
  }

  .gallery-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
  }

  .gallery-item img {
    width: 100%;
    height: 150px;
    object-fit: cover;
    border-radius: 6px;
  }

  .related-restaurants {
    background: white;
    padding: 2rem;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    margin-bottom: 3rem;
  }

  .related-restaurants h2 {
    color: #2c3e50;
    margin-bottom: 1.5rem;
  }

  .related-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
  }

  .related-card {
    border: 1px solid #e9ecef;
    border-radius: 8px;
    overflow: hidden;
    transition: transform 0.3s ease;
  }

  .related-card:hover {
    transform: translateY(-2px);
  }

  .related-card img {
    width: 100%;
    height: 150px;
    object-fit: cover;
  }

  .related-info {
    padding: 1rem;
  }

  .related-info h3 {
    color: #2c3e50;
    margin-bottom: 0.5rem;
    font-size: 1.1rem;
  }

  .related-info p {
    color: #6c757d;
    margin-bottom: 0.5rem;
    font-size: 0.9rem;
  }

  .related-meta {
    display: flex;
    gap: 1rem;
    margin-bottom: 1rem;
    font-size: 0.9rem;
  }

  .related-meta .rating {
    color: #ffc107;
  }

  .related-meta .date-score {
    color: #e74c3c;
  }

  .back-section {
    text-align: center;
    padding: 2rem 0;
  }

  .btn {
    display: inline-block;
    padding: 0.75rem 1.5rem;
    background: #e74c3c;
    color: white;
    text-decoration: none;
    border-radius: 6px;
    font-weight: 600;
    transition: background-color 0.3s ease;
  }

  .btn:hover {
    background: #c0392b;
  }

  .btn-secondary {
    background: #6c757d;
  }

  .btn-secondary:hover {
    background: #5a6268;
  }

  @media (max-width: 768px) {
    .restaurant-header {
      grid-template-columns: 1fr;
      gap: 2rem;
    }
    
    .restaurant-meta {
      flex-direction: column;
      gap: 1rem;
    }
  }
</style>
