---
import BaseLayout from '@/layouts/BaseLayout.astro';
import RestaurantCard from '@/components/RestaurantCard.astro';
import { getRestaurantBySlug, searchRestaurants, generateDateNightDescription } from '@/data/restaurants';
import { getAllCities } from '@/data/cities';

export async function getStaticPaths() {
  const { restaurants } = await import('@/data/restaurants');
  return restaurants.map((restaurant) => ({
    params: { slug: restaurant.slug },
    props: { restaurant },
  }));
}

const { restaurant } = Astro.props;
const { slug } = Astro.params;

if (!restaurant) {
  return Astro.redirect('/404');
}

const relatedRestaurants = searchRestaurants('', { cuisine: restaurant.cuisineTypes[0] })
  .filter(r => r.id !== restaurant.id)
  .slice(0, 4);

const priceSymbols = '$'.repeat(restaurant.priceLevel);
const stars = '★'.repeat(Math.floor(restaurant.rating));
const mainImage = restaurant.photos[0] || 'https://images.unsplash.com/photo-1414235077428-338989a2e8c0?w=800&h=600&fit=crop';
const dateNightDescription = generateDateNightDescription(restaurant);

const structuredData = {
  "@context": "https://schema.org",
  "@type": "Restaurant",
  "name": restaurant.name,
  "description": restaurant.description,
  "url": `https://ladatenightrestaurants.com/restaurants/${restaurant.slug}/`,
  "telephone": restaurant.phone,
  "address": {
    "@type": "PostalAddress",
    "streetAddress": restaurant.address,
    "addressLocality": restaurant.area,
    "addressRegion": "CA",
    "postalCode": restaurant.zipCode,
    "addressCountry": "US"
  },
  "geo": {
    "@type": "GeoCoordinates",
    "latitude": restaurant.latitude,
    "longitude": restaurant.longitude
  },
  "aggregateRating": {
    "@type": "AggregateRating",
    "ratingValue": restaurant.rating,
    "reviewCount": restaurant.reviews.length
  },
  "priceRange": priceSymbols,
  "servesCuisine": restaurant.cuisineTypes,
  "openingHours": Object.entries(restaurant.openingHours).map(([day, hours]) => {
    const dayMap = {
      'Monday': 'Mo', 'Tuesday': 'Tu', 'Wednesday': 'We',
      'Thursday': 'Th', 'Friday': 'Fr', 'Saturday': 'Sa', 'Sunday': 'Su'
    };
    return `${dayMap[day] || day} ${hours}`;
  }),
  "image": restaurant.photos,
  "sameAs": restaurant.website
};
---

<BaseLayout 
  title={`${restaurant.name} | Date Night Restaurant in ${restaurant.area} | LA Date Night`}
  description={dateNightDescription}
  keywords={[restaurant.name, `date night restaurant ${restaurant.area}`, `romantic dining ${restaurant.area}`, ...restaurant.cuisineTypes, `fine dining ${restaurant.area}`]}
  canonical={`https://ladatenightrestaurants.com/restaurants/${restaurant.slug}/`}
  ogImage={mainImage}
  structuredData={structuredData}
>
  <!-- Restaurant Hero -->
  <section class="restaurant-hero">
    <div class="restaurant-hero-content">
      <div class="restaurant-hero-image">
        <img src={mainImage} alt={restaurant.name} />
      </div>
      <div class="restaurant-hero-info">
        <h1>{restaurant.name}</h1>
        <div class="restaurant-meta">
          <div class="restaurant-rating">
            <span class="stars">{stars}</span>
            <span>{restaurant.rating}/5</span>
          </div>
          <div class="restaurant-price">{priceSymbols}</div>
          <div class="restaurant-score">Date Score: {restaurant.dateNightScore}</div>
        </div>
        <div class="restaurant-description">
          <h3>Perfect for Date Nights</h3>
          <p>{dateNightDescription}</p>
        </div>
        <div class="restaurant-actions">
          <a href={restaurant.website} target="_blank" class="btn btn-primary">
            <i class="fas fa-external-link-alt"></i> Visit Website
          </a>
          <a href={`tel:${restaurant.phone}`} class="btn btn-secondary">
            <i class="fas fa-phone"></i> Call Now
          </a>
        </div>
      </div>
    </div>
  </section>

  <!-- Restaurant Details -->
  <section class="restaurant-details">
    <div class="container">
      <div class="details-grid">
        <div class="details-section">
          <h3><i class="fas fa-map-marker-alt"></i> Location & Contact</h3>
          <div class="contact-info">
            <p><strong>Address:</strong> {restaurant.address}</p>
            <p><strong>Phone:</strong> <a href={`tel:${restaurant.phone}`}>{restaurant.phone}</a></p>
            <p><strong>Website:</strong> <a href={restaurant.website} target="_blank">{restaurant.website}</a></p>
            <p><strong>Cuisine:</strong> {restaurant.cuisineTypes.join(', ')}</p>
            <p><strong>Area:</strong> {restaurant.area}</p>
          </div>
        </div>
        
        <div class="details-section">
          <h3><i class="fas fa-clock"></i> Opening Hours</h3>
          <div class="hours-info">
            {Object.entries(restaurant.openingHours).map(([day, hours]) => (
              <div class="hours-item">
                <span class="day">{day}</span>
                <span class="hours">{hours}</span>
              </div>
            ))}
          </div>
        </div>
        
        <div class="details-section">
          <h3><i class="fas fa-star"></i> Reviews</h3>
          <div class="reviews-info">
            {restaurant.reviews.slice(0, 5).map(review => (
              <div class="review-item">
                <div class="review-header">
                  <strong>{review.author}</strong>
                  <div class="review-rating">{'★'.repeat(review.rating)}</div>
                </div>
                <p class="review-text">"{review.text}"</p>
              </div>
            ))}
          </div>
        </div>
        
        <div class="details-section">
          <h3><i class="fas fa-images"></i> Photos</h3>
          <div class="photos-grid">
            {restaurant.photos.slice(0, 6).map(photo => (
              <img src={photo} alt="Restaurant photo" class="photo-item" />
            ))}
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Related Restaurants -->
  {relatedRestaurants.length > 0 && (
    <section class="related-restaurants">
      <div class="container">
        <h2>More Date Night Restaurants in {restaurant.area}</h2>
        <div class="restaurants-grid">
          {relatedRestaurants.map(relatedRestaurant => (
            <RestaurantCard restaurant={relatedRestaurant} />
          ))}
        </div>
      </div>
    </section>
  )}
</BaseLayout>

<style>
  .restaurant-hero {
    background: linear-gradient(135deg, #2C2C2C 0%, #4A4A4A 50%, #D4AF37 100%);
    color: white;
    padding: 120px 0 80px;
  }
  
  .restaurant-hero-content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 3rem;
    align-items: center;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
  }
  
  .restaurant-hero-image img {
    width: 100%;
    height: 400px;
    object-fit: cover;
    border-radius: 15px;
    box-shadow: 0 20px 40px rgba(0,0,0,0.3);
  }
  
  .restaurant-hero-info h1 {
    font-size: 3rem;
    margin-bottom: 1rem;
    font-weight: 700;
  }
  
  .restaurant-meta {
    display: flex;
    gap: 1rem;
    margin-bottom: 1.5rem;
    flex-wrap: wrap;
  }
  
  .restaurant-rating, .restaurant-price, .restaurant-score {
    background: rgba(255,255,255,0.2);
    padding: 0.5rem 1rem;
    border-radius: 20px;
    backdrop-filter: blur(10px);
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .restaurant-rating .stars {
    color: #ffc107;
  }
  
  .restaurant-description {
    background: #F8F6F0;
    padding: 2rem;
    border-radius: 12px;
    margin-bottom: 2rem;
    border-left: 4px solid #D4AF37;
  }
  
  .restaurant-description h3 {
    color: #2C2C2C;
    margin-bottom: 1rem;
    font-size: 1.2rem;
    font-weight: 600;
  }
  
  .restaurant-description p {
    color: #4A4A4A;
    line-height: 1.7;
    margin: 0;
    font-size: 1rem;
  }
  
  .restaurant-actions {
    display: flex;
    gap: 1rem;
  }
  
  .btn {
    padding: 1rem 2rem;
    border: none;
    border-radius: 25px;
    cursor: pointer;
    font-weight: 500;
    transition: all 0.3s ease;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .btn-primary {
    background: #d63384;
    color: white;
  }
  
  .btn-primary:hover {
    background: #b02a5b;
    transform: translateY(-2px);
  }
  
  .btn-secondary {
    background: rgba(255,255,255,0.2);
    color: white;
    border: 1px solid rgba(255,255,255,0.3);
  }
  
  .btn-secondary:hover {
    background: rgba(255,255,255,0.3);
  }
  
  .restaurant-details {
    padding: 80px 0;
    background: #fff;
  }
  
  .details-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
  }
  
  .details-section {
    background: #f8f9fa;
    padding: 2rem;
    border-radius: 15px;
  }
  
  .details-section h3 {
    color: #333;
    margin-bottom: 1.5rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .contact-info p {
    margin-bottom: 0.5rem;
    color: #666;
  }
  
  .contact-info a {
    color: #d63384;
  }
  
  .hours-item {
    display: flex;
    justify-content: space-between;
    padding: 0.5rem 0;
    border-bottom: 1px solid #eee;
  }
  
  .hours-item:last-child {
    border-bottom: none;
  }
  
  .day {
    font-weight: 500;
  }
  
  .hours {
    color: #666;
  }
  
  .review-item {
    background: white;
    padding: 1rem;
    border-radius: 10px;
    margin-bottom: 1rem;
    box-shadow: 0 2px 10px rgba(0,0,0,0.05);
  }
  
  .review-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.5rem;
  }
  
  .review-rating {
    color: #ffc107;
  }
  
  .review-text {
    color: #666;
    line-height: 1.5;
    font-style: italic;
  }
  
  .photos-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 1rem;
  }
  
  .photo-item {
    width: 100%;
    height: 150px;
    object-fit: cover;
    border-radius: 10px;
    transition: transform 0.3s ease;
  }
  
  .photo-item:hover {
    transform: scale(1.05);
  }
  
  .related-restaurants {
    padding: 80px 0;
    background: #f8f9fa;
  }
  
  .related-restaurants h2 {
    text-align: center;
    margin-bottom: 3rem;
    color: #333;
  }
  
  .restaurants-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
  }
  
  @media (max-width: 768px) {
    .restaurant-hero-content {
      grid-template-columns: 1fr;
      gap: 2rem;
    }
    
    .restaurant-hero-info h1 {
      font-size: 2rem;
    }
    
    .restaurant-meta {
      flex-direction: column;
      align-items: flex-start;
    }
    
    .restaurant-actions {
      flex-direction: column;
    }
  }
</style>
